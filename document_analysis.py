{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":263780,"sourceType":"datasetVersion","datasetId":110385}],"dockerImageVersionId":31040,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import os\nimport spacy\nimport matplotlib.pyplot as plt\nimport pathlib\nimport pandas as pd\n\nclass TextProcessing:\n    \n    def __init__(self, document_path):\n        self.document_path = document_path\n        self.nlp = spacy.load('en_core_web_sm')\n        self.doc,self.pipe = self._load_and_process_text()\n\n    def _load_and_process_text(self):\n        text = pathlib.Path(self.document_path).read_text(encoding=\"utf-8\")\n        doc = self.nlp(text)\n        pipeline = self.nlp.pipe_names  \n        return doc, pipeline\n        \n    def get_token_attributes_table(self):\n        data = []\n        for token in self.doc:\n            data.append({\n                \"Text\": token.text,\n                \"Lemma\": token.lemma_,\n                \"POS\": token.pos_,\n                \"Tag\": token.tag_,\n                \"Dependency\": token.dep_,\n                \"Shape\": token.shape_,\n                \"Is_Alpha\": token.is_alpha,\n                \"Is_Stopword\": token.is_stop,\n                \"Morph\": token.morph\n            })\n\n        df = pd.DataFrame(data)\n        return df\n\nif __name__ == \"__main__\":\n    path = '/kaggle/input/bbc-full-text-document-classification/bbc/business/001.txt'\n    processor = TextProcessing(path)\n    table=processor.get_token_attributes_table()\n    print(table.head(20))\n    \n    print(processor.pipe)","metadata":{"_uuid":"86eb1dfa-ead7-4b58-9c7f-afbaf3e35339","_cell_guid":"7cc5cab3-3a7e-4df3-b7c5-95e77d45a990","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null}]}